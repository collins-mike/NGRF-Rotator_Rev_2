'''
========================
3D surface (solid color)
========================

Demonstrates a very basic plot of a 3D surface using a solid color.
'''

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import numpy as np
from matplotlib import cm

np.set_printoptions(threshold=np.inf)

size=100

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# Make data
#u = np.linspace(0, 2 * np.pi, size)
s = np.linspace(0, np.pi, size)

# s=np.array([3.6,7.2,10.8,14.4,18,21.6,25.2,
# 28.8,32.4,36,39.6,43.2,46.8,50.4,
# 54,57.6,61.2,64.8,68.4,72,75.6,79.2,
# 82.8,86.4,90,93.6,97.2,100.8,104.4,
# 108,111.6,115.2,118.8,122.4,126,129.6,
# 133.2,136.8,140.4,144,147.6,151.2,154.8,
# 158.4,162,165.6,169.2,172.8,176.4,180,
# 183.6,187.2,190.8,194.4,198,201.6,
# 205.2,208.8,212.4,216,219.6,223.2,226.8,
# 230.4,234,237.6,241.2,244.8,248.4,252,
# 255.6,259.2,262.8,266.4,270,273.6,277.2,
# 280.8,284.4,288,291.6,295.2,298.8,302.4,306,
# 309.6,313.2,316.8,320.4,324,327.6,331.2,
# 334.8,338.4,342,345.6,349.2,352.8,356.4,360,])
# s=s*np.pi/180

u=np.array([3.6,7.2,10.8,14.4,18,21.6,25.2,
28.8,32.4,36,39.6,43.2,46.8,50.4,
54,57.6,61.2,64.8,68.4,72,75.6,79.2,
82.8,86.4,90,93.6,97.2,100.8,104.4,
108,111.6,115.2,118.8,122.4,126,129.6,
133.2,136.8,140.4,144,147.6,151.2,154.8,
158.4,162,165.6,169.2,172.8,176.4,180,
183.6,187.2,190.8,194.4,198,201.6,
205.2,208.8,212.4,216,219.6,223.2,226.8,
230.4,234,237.6,241.2,244.8,248.4,252,
255.6,259.2,262.8,266.4,270,273.6,277.2,
280.8,284.4,288,291.6,295.2,298.8,302.4,306,
309.6,313.2,316.8,320.4,324,327.6,331.2,
334.8,338.4,342,345.6,349.2,352.8,356.4,360,])
u=u*np.pi/180


print "u: \n"
print u
print "s: \n"
print s

#h=np.linspace(5, 10, size)
#h=np.ndarray(shape=size)
#1,1,1,1,1,1,1,1,1,1,
#2,2,2,2,2,2,2,2,2,2,
#3,3,3,3,3,3,3,3,3,3,
#4,4,4,4,4,4,4,4,4,4,
#5,5,5,5,5,5,5,5,5,5,
#6,6,6,6,6,6,6,6,6,6,
#7,7,7,7,7,7,7,7,7,7,
#8,8,8,8,8,8,8,8,8,8,
#9,9,9,9,9,9,9,9,9,9,
#10,10,10,10,10,10,10,10,10,10,
h=np.array([
-68.07631393,-65.62100996,-61.44096837,-59.4762035,-58.4601175,-58.11713228,-59.74490403,
-60.80763988,-61.37126124,-61.34877379,-61.04435235,-60.73300063,-61.82241352,-66.23947333,-67.56640742,-63.69039879,
-62.37221927,-65.57574481,-69.12937471,-67.29072384,-66.99387459,-70.21430063,-75.69038103,-72.81268974,-67.37005597,-68.82066627,
-78.0904276,-68.17893289,-67.65253544,-77.47222446,-65.61789733,-62.06122698,-62.48948178,-67.49615477,-72.35159777,
-66.65558318,-65.03312166,-64.86122801,-64.88777268,-65.94398886,-66.87005078,-68.1186652,-68.49631656,-71.03915594,-73.62821193,
-77.87237493,-77.80020641,-77.51671366,-77.1585423,-77.81257137,-77.24132592,-75.81842573,-73.15429506,-73.35627997,
-69.91199777,-69.68871323,-68.84561117,-71.0231075,-74.80570806,-77.85146116,-72.97358413,-71.83732021,-71.69183458,
-76.93780755,-77.72822547,-69.13023109,-64.6426248,-63.93779598,-67.74241415,-76.34882237,-69.37970882,-66.49575555,
-67.97510085,-68.40106746,-71.09635668,-76.75997278,-68.16501243,-65.36448224,-67.69192959,-77.61635295,-67.04808028,-63.04667573,
-62.03227738,-62.88693517,-64.40459093,-63.95323083,-64.19280311,-61.2447391,-59.66184834,-60.57570525,-63.4609012,
-64.00277353,-60.80242018,-56.96341075,-56.39344622,-56.87008325,-57.65077536,-59.98051915,-63.39141557,-67.1151747,
])
# for i in u:
	# np.insert(h,i,np.random.randint(1,30))

#v=np.ndarray(shape=size)
# for i in u:
	# np.insert(v,i,np.random.randint(1,30))
	
v=np.array([
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
])
	
print "v: \n"
print v
print "h: \n"
print h
rho=h

print "rho: \n"
print rho




x = rho * np.outer(np.cos(u), np.sin(s))
y = rho * np.outer(np.sin(u), np.sin(s))
z =  np.outer(np.ones(np.size(u)), np.cos(s))

print "x: \n"
print x
print "v: \n"
print y
print "z: \n"
print z


# Plot the surface
ax.plot_surface(x, y, z,  cmap=plt.cm.YlGnBu_r )

plt.show()